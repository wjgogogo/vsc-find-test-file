{
  "name": "find-test-file",
  "displayName": "Find Test File",
  "description": "It'll help you jump between source and test file easily.",
  "version": "0.1.0",
  "engines": {
    "vscode": "^1.50.0"
  },
  "publisher": "wjgogogo",
  "icon": "public/icon.png",
  "categories": [
    "Other"
  ],
  "main": "./dist/extension.js",
  "activationEvents": [
    "onCommand:find-test-file.jumpToTest"
  ],
  "contributes": {
    "commands": [
      {
        "command": "find-test-file.jumpToTest",
        "title": "Jump To Source/Test File",
        "category": "Find Test File",
        "icon": "$(preferences-open-settings)",
        "enablement": "resourceExtname =~ /.[jt]sx?/"
      }
    ],
    "keybindings": [
      {
        "command": "find-test-file.jumpToTest",
        "key": "ctrl+shift+t",
        "mac": "cmd+shift+t",
        "when": "resourceExtname =~ /.[jt]sx?/"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "find-test-file.jumpToTest",
          "group": "2_find-test-file",
          "when": "resourceExtname =~ /.[jt]sx?/"
        }
      ],
      "editor/title": [
        {
          "command": "find-test-file.jumpToTest",
          "group": "navigation",
          "when": "resourceExtname =~ /.[jt]sx?/"
        }
      ]
    },
    "configuration": {
      "title": "Find Test File",
      "properties": {
        "findTestFile.basic.testSuffix": {
          "type": "string",
          "default": "\\.(spec|test)",
          "markdownDescription": "The regexp patterns that extension uses to detect test files. By default, it looks for `.js`, `.jsx`, `.ts`, `.tsx` files with a suffix of `.spec` or `.test` (e.g. `example.spec.ts` or `example.test.js`)."
        },
        "findTestFile.basic.excludeFolder": {
          "type": "array",
          "default": [
            "node_modules"
          ],
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "markdownDescription": "The folders that are outside of scan range. By default, it excludes `node_modules` and `dist`."
        },
        "findTestFile.createIfNotFind.enable": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Decide whether to create test file when it can't be found ."
        },
        "findTestFile.createIfNotFind.preferStructureMode": {
          "type": "string",
          "default": "separate",
          "enum": [
            "separate",
            "unite"
          ],
          "markdownEnumDescriptions": [
            "Put all test files in %findTestFile.advanced.createIfNotFind%, and follow the directory structure of source files (e.g. the test file of `src/example/a.ts` should be `__tests__/example/a.spec.ts`).",
            "Put related test file close to source file (e.g. the test file of `src/example/a.ts` should be `src/example/a.spec.ts`)."
          ],
          "markdownDescription": "The prefer way to `#findTestFile.advanced.createIfNotFind#` create new test file when can't find it. By default it's `separate`."
        },
        "findTestFile.createIfNotFind.preferTestDirectory": {
          "type": "object",
          "default": {
            "separate": "__tests__",
            "unite": "__tests__"
          },
          "properties": {
            "separate": {
              "type": "string"
            },
            "unite": {
              "type": "string"
            }
          },
          "required": [
            "separate",
            "unite"
          ],
          "additionalProperties": false,
          "markdownDescription": "The prefer directory to create new test file when can't find it. By default it's `__tests__`, and only enable when **Prefer StructureMode** set to `separate` (e.g. it will create `__tests__/a.spec.ts` as test file for `src/a.ts`). And support multi-level directories (e.g. `__tests__/unit`)."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./dist/test/runTest.js",
    "prepublish": "vsce package",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.2",
    "@types/node": "14.x",
    "@types/string-similarity": "^4.0.0",
    "@types/vscode": "^1.50.0",
    "@typescript-eslint/eslint-plugin": "^4.26.0",
    "@typescript-eslint/parser": "^4.26.0",
    "eslint": "^7.27.0",
    "glob": "^7.1.7",
    "mocha": "^8.4.0",
    "typescript": "^4.3.2",
    "vsce": "^1.93.0",
    "vscode-test": "^1.5.2"
  },
  "dependencies": {
    "string-similarity": "^4.0.4"
  }
}
